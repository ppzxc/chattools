// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: auth.proto

package proto_gen

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LOGIN //
type RequestAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header     *Header     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	UserId     int64       `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName   string      `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Name       string      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Email      string      `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Password   string      `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Token      string      `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	TopicId    int64       `protobuf:"varint,8,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	FileId     int64       `protobuf:"varint,9,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	File       *File       `protobuf:"bytes,10,opt,name=file,proto3" json:"file,omitempty"`
	Profile    *Profile    `protobuf:"bytes,11,opt,name=profile,proto3" json:"profile,omitempty"`
	DeviceInfo *DeviceInfo `protobuf:"bytes,12,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
}

func (x *RequestAuthentication) Reset() {
	*x = RequestAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAuthentication) ProtoMessage() {}

func (x *RequestAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAuthentication.ProtoReflect.Descriptor instead.
func (*RequestAuthentication) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{0}
}

func (x *RequestAuthentication) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RequestAuthentication) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RequestAuthentication) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RequestAuthentication) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestAuthentication) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RequestAuthentication) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RequestAuthentication) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RequestAuthentication) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *RequestAuthentication) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *RequestAuthentication) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *RequestAuthentication) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *RequestAuthentication) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type ResponseAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header               *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	User                 *User   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	File                 *File   `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	Audience             string  `protobuf:"bytes,4,opt,name=audience,proto3" json:"audience,omitempty"`
	Token                string  `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	SubscriptionTopicIds []int64 `protobuf:"varint,6,rep,packed,name=subscription_topic_ids,json=subscriptionTopicIds,proto3" json:"subscription_topic_ids,omitempty"`
	Result               *Result `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ResponseAuthentication) Reset() {
	*x = ResponseAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAuthentication) ProtoMessage() {}

func (x *ResponseAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAuthentication.ProtoReflect.Descriptor instead.
func (*ResponseAuthentication) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseAuthentication) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ResponseAuthentication) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ResponseAuthentication) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ResponseAuthentication) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *ResponseAuthentication) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResponseAuthentication) GetSubscriptionTopicIds() []int64 {
	if x != nil {
		return x.SubscriptionTopicIds
	}
	return nil
}

func (x *ResponseAuthentication) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_auth_proto protoreflect.FileDescriptor

var file_auth_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x03, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x67, 0x65, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa0, 0x02, 0x0a, 0x16, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65,
	0x6e, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x16,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x14, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xd7, 0x07,
	0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x54, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x12, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67,
	0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x0e, 0x55, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x55,
	0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auth_proto_rawDescOnce sync.Once
	file_auth_proto_rawDescData = file_auth_proto_rawDesc
)

func file_auth_proto_rawDescGZIP() []byte {
	file_auth_proto_rawDescOnce.Do(func() {
		file_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_proto_rawDescData)
	})
	return file_auth_proto_rawDescData
}

var file_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_auth_proto_goTypes = []interface{}{
	(*RequestAuthentication)(nil),  // 0: proto_gen.RequestAuthentication
	(*ResponseAuthentication)(nil), // 1: proto_gen.ResponseAuthentication
	(*Header)(nil),                 // 2: proto_gen.Header
	(*File)(nil),                   // 3: proto_gen.File
	(*Profile)(nil),                // 4: proto_gen.Profile
	(*DeviceInfo)(nil),             // 5: proto_gen.DeviceInfo
	(*User)(nil),                   // 6: proto_gen.User
	(*Result)(nil),                 // 7: proto_gen.Result
}
var file_auth_proto_depIdxs = []int32{
	2,  // 0: proto_gen.RequestAuthentication.header:type_name -> proto_gen.Header
	3,  // 1: proto_gen.RequestAuthentication.file:type_name -> proto_gen.File
	4,  // 2: proto_gen.RequestAuthentication.profile:type_name -> proto_gen.Profile
	5,  // 3: proto_gen.RequestAuthentication.device_info:type_name -> proto_gen.DeviceInfo
	2,  // 4: proto_gen.ResponseAuthentication.header:type_name -> proto_gen.Header
	6,  // 5: proto_gen.ResponseAuthentication.user:type_name -> proto_gen.User
	3,  // 6: proto_gen.ResponseAuthentication.file:type_name -> proto_gen.File
	7,  // 7: proto_gen.ResponseAuthentication.result:type_name -> proto_gen.Result
	0,  // 8: proto_gen.Authenticator.LoginRotary:input_type -> proto_gen.RequestAuthentication
	0,  // 9: proto_gen.Authenticator.LoginEmailPassword:input_type -> proto_gen.RequestAuthentication
	0,  // 10: proto_gen.Authenticator.LoginAnonymous:input_type -> proto_gen.RequestAuthentication
	0,  // 11: proto_gen.Authenticator.LoginToken:input_type -> proto_gen.RequestAuthentication
	0,  // 12: proto_gen.Authenticator.LogoutSession:input_type -> proto_gen.RequestAuthentication
	0,  // 13: proto_gen.Authenticator.RegisterUser:input_type -> proto_gen.RequestAuthentication
	0,  // 14: proto_gen.Authenticator.UnRegisterUser:input_type -> proto_gen.RequestAuthentication
	0,  // 15: proto_gen.Authenticator.IssuedToken:input_type -> proto_gen.RequestAuthentication
	0,  // 16: proto_gen.Authenticator.ClassifyFile:input_type -> proto_gen.RequestAuthentication
	0,  // 17: proto_gen.Authenticator.ClassifyProfile:input_type -> proto_gen.RequestAuthentication
	0,  // 18: proto_gen.Authenticator.ProfileUpdate:input_type -> proto_gen.RequestAuthentication
	1,  // 19: proto_gen.Authenticator.LoginRotary:output_type -> proto_gen.ResponseAuthentication
	1,  // 20: proto_gen.Authenticator.LoginEmailPassword:output_type -> proto_gen.ResponseAuthentication
	1,  // 21: proto_gen.Authenticator.LoginAnonymous:output_type -> proto_gen.ResponseAuthentication
	1,  // 22: proto_gen.Authenticator.LoginToken:output_type -> proto_gen.ResponseAuthentication
	1,  // 23: proto_gen.Authenticator.LogoutSession:output_type -> proto_gen.ResponseAuthentication
	1,  // 24: proto_gen.Authenticator.RegisterUser:output_type -> proto_gen.ResponseAuthentication
	1,  // 25: proto_gen.Authenticator.UnRegisterUser:output_type -> proto_gen.ResponseAuthentication
	1,  // 26: proto_gen.Authenticator.IssuedToken:output_type -> proto_gen.ResponseAuthentication
	1,  // 27: proto_gen.Authenticator.ClassifyFile:output_type -> proto_gen.ResponseAuthentication
	1,  // 28: proto_gen.Authenticator.ClassifyProfile:output_type -> proto_gen.ResponseAuthentication
	1,  // 29: proto_gen.Authenticator.ProfileUpdate:output_type -> proto_gen.ResponseAuthentication
	19, // [19:30] is the sub-list for method output_type
	8,  // [8:19] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_auth_proto_init() }
func file_auth_proto_init() {
	if File_auth_proto != nil {
		return
	}
	file_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_proto_goTypes,
		DependencyIndexes: file_auth_proto_depIdxs,
		MessageInfos:      file_auth_proto_msgTypes,
	}.Build()
	File_auth_proto = out.File
	file_auth_proto_rawDesc = nil
	file_auth_proto_goTypes = nil
	file_auth_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthenticatorClient is the client API for Authenticator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthenticatorClient interface {
	LoginRotary(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	LoginEmailPassword(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	LoginAnonymous(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	LoginToken(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	LogoutSession(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	RegisterUser(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	UnRegisterUser(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	IssuedToken(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	ClassifyFile(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	ClassifyProfile(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
	ProfileUpdate(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error)
}

type authenticatorClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthenticatorClient(cc grpc.ClientConnInterface) AuthenticatorClient {
	return &authenticatorClient{cc}
}

func (c *authenticatorClient) LoginRotary(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/LoginRotary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) LoginEmailPassword(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/LoginEmailPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) LoginAnonymous(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/LoginAnonymous", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) LoginToken(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/LoginToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) LogoutSession(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/LogoutSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) RegisterUser(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) UnRegisterUser(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/UnRegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) IssuedToken(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/IssuedToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) ClassifyFile(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/ClassifyFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) ClassifyProfile(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/ClassifyProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticatorClient) ProfileUpdate(ctx context.Context, in *RequestAuthentication, opts ...grpc.CallOption) (*ResponseAuthentication, error) {
	out := new(ResponseAuthentication)
	err := c.cc.Invoke(ctx, "/proto_gen.Authenticator/ProfileUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthenticatorServer is the server API for Authenticator service.
type AuthenticatorServer interface {
	LoginRotary(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	LoginEmailPassword(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	LoginAnonymous(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	LoginToken(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	LogoutSession(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	RegisterUser(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	UnRegisterUser(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	IssuedToken(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	ClassifyFile(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	ClassifyProfile(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
	ProfileUpdate(context.Context, *RequestAuthentication) (*ResponseAuthentication, error)
}

// UnimplementedAuthenticatorServer can be embedded to have forward compatible implementations.
type UnimplementedAuthenticatorServer struct {
}

func (*UnimplementedAuthenticatorServer) LoginRotary(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginRotary not implemented")
}
func (*UnimplementedAuthenticatorServer) LoginEmailPassword(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginEmailPassword not implemented")
}
func (*UnimplementedAuthenticatorServer) LoginAnonymous(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginAnonymous not implemented")
}
func (*UnimplementedAuthenticatorServer) LoginToken(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginToken not implemented")
}
func (*UnimplementedAuthenticatorServer) LogoutSession(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogoutSession not implemented")
}
func (*UnimplementedAuthenticatorServer) RegisterUser(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedAuthenticatorServer) UnRegisterUser(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnRegisterUser not implemented")
}
func (*UnimplementedAuthenticatorServer) IssuedToken(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IssuedToken not implemented")
}
func (*UnimplementedAuthenticatorServer) ClassifyFile(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClassifyFile not implemented")
}
func (*UnimplementedAuthenticatorServer) ClassifyProfile(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClassifyProfile not implemented")
}
func (*UnimplementedAuthenticatorServer) ProfileUpdate(context.Context, *RequestAuthentication) (*ResponseAuthentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProfileUpdate not implemented")
}

func RegisterAuthenticatorServer(s *grpc.Server, srv AuthenticatorServer) {
	s.RegisterService(&_Authenticator_serviceDesc, srv)
}

func _Authenticator_LoginRotary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).LoginRotary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/LoginRotary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).LoginRotary(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_LoginEmailPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).LoginEmailPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/LoginEmailPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).LoginEmailPassword(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_LoginAnonymous_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).LoginAnonymous(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/LoginAnonymous",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).LoginAnonymous(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_LoginToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).LoginToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/LoginToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).LoginToken(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_LogoutSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).LogoutSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/LogoutSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).LogoutSession(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).RegisterUser(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_UnRegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).UnRegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/UnRegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).UnRegisterUser(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_IssuedToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).IssuedToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/IssuedToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).IssuedToken(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_ClassifyFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).ClassifyFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/ClassifyFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).ClassifyFile(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_ClassifyProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).ClassifyProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/ClassifyProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).ClassifyProfile(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authenticator_ProfileUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticatorServer).ProfileUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Authenticator/ProfileUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticatorServer).ProfileUpdate(ctx, req.(*RequestAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authenticator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_gen.Authenticator",
	HandlerType: (*AuthenticatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginRotary",
			Handler:    _Authenticator_LoginRotary_Handler,
		},
		{
			MethodName: "LoginEmailPassword",
			Handler:    _Authenticator_LoginEmailPassword_Handler,
		},
		{
			MethodName: "LoginAnonymous",
			Handler:    _Authenticator_LoginAnonymous_Handler,
		},
		{
			MethodName: "LoginToken",
			Handler:    _Authenticator_LoginToken_Handler,
		},
		{
			MethodName: "LogoutSession",
			Handler:    _Authenticator_LogoutSession_Handler,
		},
		{
			MethodName: "RegisterUser",
			Handler:    _Authenticator_RegisterUser_Handler,
		},
		{
			MethodName: "UnRegisterUser",
			Handler:    _Authenticator_UnRegisterUser_Handler,
		},
		{
			MethodName: "IssuedToken",
			Handler:    _Authenticator_IssuedToken_Handler,
		},
		{
			MethodName: "ClassifyFile",
			Handler:    _Authenticator_ClassifyFile_Handler,
		},
		{
			MethodName: "ClassifyProfile",
			Handler:    _Authenticator_ClassifyProfile_Handler,
		},
		{
			MethodName: "ProfileUpdate",
			Handler:    _Authenticator_ProfileUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
