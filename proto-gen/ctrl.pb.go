// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: ctrl.proto

package proto_gen

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CTRL //
type RequestCtrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TopicId   int64   `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	TopicName string  `protobuf:"bytes,3,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	UserId    int64   `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RequestCtrl) Reset() {
	*x = RequestCtrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ctrl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCtrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCtrl) ProtoMessage() {}

func (x *RequestCtrl) ProtoReflect() protoreflect.Message {
	mi := &file_ctrl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCtrl.ProtoReflect.Descriptor instead.
func (*RequestCtrl) Descriptor() ([]byte, []int) {
	return file_ctrl_proto_rawDescGZIP(), []int{0}
}

func (x *RequestCtrl) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RequestCtrl) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *RequestCtrl) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *RequestCtrl) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ResponseCtrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Topic     *Topic  `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	TopicId   int64   `protobuf:"varint,3,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	TopicName string  `protobuf:"bytes,4,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	UserId    int64   `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName  string  `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Result    *Result `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ResponseCtrl) Reset() {
	*x = ResponseCtrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ctrl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCtrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCtrl) ProtoMessage() {}

func (x *ResponseCtrl) ProtoReflect() protoreflect.Message {
	mi := &file_ctrl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCtrl.ProtoReflect.Descriptor instead.
func (*ResponseCtrl) Descriptor() ([]byte, []int) {
	return file_ctrl_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseCtrl) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ResponseCtrl) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *ResponseCtrl) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *ResponseCtrl) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *ResponseCtrl) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ResponseCtrl) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ResponseCtrl) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_ctrl_proto protoreflect.FileDescriptor

var file_ctrl_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x74, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x74, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x74, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67,
	0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x32, 0xfa, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x3b, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x1a,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x74, 0x72, 0x6c, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x05, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x1a, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x74, 0x72, 0x6c, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x74, 0x72,
	0x6c, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x74, 0x72, 0x6c, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x74, 0x72, 0x6c, 0x22, 0x00, 0x42, 0x0c,
	0x5a, 0x0a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ctrl_proto_rawDescOnce sync.Once
	file_ctrl_proto_rawDescData = file_ctrl_proto_rawDesc
)

func file_ctrl_proto_rawDescGZIP() []byte {
	file_ctrl_proto_rawDescOnce.Do(func() {
		file_ctrl_proto_rawDescData = protoimpl.X.CompressGZIP(file_ctrl_proto_rawDescData)
	})
	return file_ctrl_proto_rawDescData
}

var file_ctrl_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ctrl_proto_goTypes = []interface{}{
	(*RequestCtrl)(nil),  // 0: proto_gen.RequestCtrl
	(*ResponseCtrl)(nil), // 1: proto_gen.ResponseCtrl
	(*Header)(nil),       // 2: proto_gen.Header
	(*Topic)(nil),        // 3: proto_gen.Topic
	(*Result)(nil),       // 4: proto_gen.Result
}
var file_ctrl_proto_depIdxs = []int32{
	2, // 0: proto_gen.RequestCtrl.header:type_name -> proto_gen.Header
	2, // 1: proto_gen.ResponseCtrl.header:type_name -> proto_gen.Header
	3, // 2: proto_gen.ResponseCtrl.topic:type_name -> proto_gen.Topic
	4, // 3: proto_gen.ResponseCtrl.result:type_name -> proto_gen.Result
	0, // 4: proto_gen.Control.Create:input_type -> proto_gen.RequestCtrl
	0, // 5: proto_gen.Control.Leave:input_type -> proto_gen.RequestCtrl
	0, // 6: proto_gen.Control.Invite:input_type -> proto_gen.RequestCtrl
	0, // 7: proto_gen.Control.Join:input_type -> proto_gen.RequestCtrl
	1, // 8: proto_gen.Control.Create:output_type -> proto_gen.ResponseCtrl
	1, // 9: proto_gen.Control.Leave:output_type -> proto_gen.ResponseCtrl
	1, // 10: proto_gen.Control.Invite:output_type -> proto_gen.ResponseCtrl
	1, // 11: proto_gen.Control.Join:output_type -> proto_gen.ResponseCtrl
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ctrl_proto_init() }
func file_ctrl_proto_init() {
	if File_ctrl_proto != nil {
		return
	}
	file_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ctrl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCtrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ctrl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCtrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ctrl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ctrl_proto_goTypes,
		DependencyIndexes: file_ctrl_proto_depIdxs,
		MessageInfos:      file_ctrl_proto_msgTypes,
	}.Build()
	File_ctrl_proto = out.File
	file_ctrl_proto_rawDesc = nil
	file_ctrl_proto_goTypes = nil
	file_ctrl_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ControlClient is the client API for Control service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControlClient interface {
	Create(ctx context.Context, in *RequestCtrl, opts ...grpc.CallOption) (*ResponseCtrl, error)
	Leave(ctx context.Context, in *RequestCtrl, opts ...grpc.CallOption) (*ResponseCtrl, error)
	Invite(ctx context.Context, in *RequestCtrl, opts ...grpc.CallOption) (*ResponseCtrl, error)
	Join(ctx context.Context, in *RequestCtrl, opts ...grpc.CallOption) (*ResponseCtrl, error)
}

type controlClient struct {
	cc grpc.ClientConnInterface
}

func NewControlClient(cc grpc.ClientConnInterface) ControlClient {
	return &controlClient{cc}
}

func (c *controlClient) Create(ctx context.Context, in *RequestCtrl, opts ...grpc.CallOption) (*ResponseCtrl, error) {
	out := new(ResponseCtrl)
	err := c.cc.Invoke(ctx, "/proto_gen.Control/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) Leave(ctx context.Context, in *RequestCtrl, opts ...grpc.CallOption) (*ResponseCtrl, error) {
	out := new(ResponseCtrl)
	err := c.cc.Invoke(ctx, "/proto_gen.Control/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) Invite(ctx context.Context, in *RequestCtrl, opts ...grpc.CallOption) (*ResponseCtrl, error) {
	out := new(ResponseCtrl)
	err := c.cc.Invoke(ctx, "/proto_gen.Control/Invite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) Join(ctx context.Context, in *RequestCtrl, opts ...grpc.CallOption) (*ResponseCtrl, error) {
	out := new(ResponseCtrl)
	err := c.cc.Invoke(ctx, "/proto_gen.Control/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControlServer is the server API for Control service.
type ControlServer interface {
	Create(context.Context, *RequestCtrl) (*ResponseCtrl, error)
	Leave(context.Context, *RequestCtrl) (*ResponseCtrl, error)
	Invite(context.Context, *RequestCtrl) (*ResponseCtrl, error)
	Join(context.Context, *RequestCtrl) (*ResponseCtrl, error)
}

// UnimplementedControlServer can be embedded to have forward compatible implementations.
type UnimplementedControlServer struct {
}

func (*UnimplementedControlServer) Create(context.Context, *RequestCtrl) (*ResponseCtrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedControlServer) Leave(context.Context, *RequestCtrl) (*ResponseCtrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}
func (*UnimplementedControlServer) Invite(context.Context, *RequestCtrl) (*ResponseCtrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invite not implemented")
}
func (*UnimplementedControlServer) Join(context.Context, *RequestCtrl) (*ResponseCtrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}

func RegisterControlServer(s *grpc.Server, srv ControlServer) {
	s.RegisterService(&_Control_serviceDesc, srv)
}

func _Control_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCtrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Control/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).Create(ctx, req.(*RequestCtrl))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCtrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Control/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).Leave(ctx, req.(*RequestCtrl))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_Invite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCtrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).Invite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Control/Invite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).Invite(ctx, req.(*RequestCtrl))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCtrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_gen.Control/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).Join(ctx, req.(*RequestCtrl))
	}
	return interceptor(ctx, in, info, handler)
}

var _Control_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_gen.Control",
	HandlerType: (*ControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Control_Create_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _Control_Leave_Handler,
		},
		{
			MethodName: "Invite",
			Handler:    _Control_Invite_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _Control_Join_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ctrl.proto",
}
